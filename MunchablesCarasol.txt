
<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
      <li
        data-target="#carouselExampleIndicators"
        data-slide-to="0"
        class="active"
      ></li>
      <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
      <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner" id="slide_container ">
      <div class="carousel-item active ">
        <section id="flex" style="background-image: url(food.jpeg)">
           <div id="justify_content" *ngFor="let recipe of recipes; let i=index" >
            <div class="card" style="width: 18rem;">
              <div class="card-body">
                <h5 class="card-title">{{recipe.recipeName}}</h5>
                <div *ngFor="let step of steps">
                <p class="card-text" >
                    {{ step.step }}
                </p>
              </div>
                <a href="#" class="btn btn-primary">View Recipe</a>
              </div>
            </div>


          </div>
        </section>
      </div>
      <!-- ADD NG FOR here -->

      <div class="carousel-item ">
        <section id="flex" style="background-image: url(food.jpeg)">
          <div id="justify_content">
            <div class="card" style="width: 18rem;">
              <div class="card-body">
                <h5 class="card-title">Testing 2</h5>
                <p class="card-text">
                  Some quick example text to build on the card title and make up
                  the bulk of the card's content.
                </p>
                <a href="#" class="btn btn-primary">View Recipe</a>
              </div>
            </div>
            <div class="card" style="width: 18rem;">
              <div class="card-body">
                <h5 class="card-title"></h5>
                <p class="card-text">
                  Some quick example text to build on the card title and make up
                  the bulk of the card's content.
                </p>
                <a href="#" class="btn btn-primary">View Recipe</a>
              </div>
            </div>
            <div class="card" style="width: 18rem;">
              <div class="card-body">
                <h5 class="card-title"></h5>
                <p class="card-text">
                  Some quick example text to build on the card title and make up
                  the bulk of the card's content.
                </p>
                <a href="#" class="btn btn-primary">View Recipe</a>
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>

    <a
      class="carousel-control-prev"
      href="#carouselExampleIndicators"
      role="button"
      data-slide="prev"
    >
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a
      class="carousel-control-next"
      href="#carouselExampleIndicators"
      role="button"
      data-slide="next"
    >
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
  </div>
  <div class="carousel-item">
    <img src="..." alt="..." />
    <div class="carousel-caption d-none d-md-block">
      <h5>Testing this badboy</h5>
      <p>...</p>
    </div>
  </div>


<div id="justify_content" *ngFor="let recipe of recipes; let i = index">
  <h5 class="card-title">{{ recipe.recipeName }}</h5>
  <div *ngFor="let ingredients of ingredient">
    <p class="card-text" *ngIf="recipe.recipeId === ingredients.recipeId">
      {{ ingredients.name }}
    </p>
  </div>
  <div *ngFor="let step of steps">
    <p class="card-text" *ngIf="recipe.recipeId === step.recipeId">
      {{ step.step }}
    </p>
  </div>
</div>


// Current Display in Slider
<!-- Display Recipe Name -->
<div id="justify_content" *ngFor="let recipe of recipes">
  <h1 class="card-title">  {{ recipe.recipeName }} </h1>
  <!-- Display Ingredient Name -->
  <div *ngFor="let recipeIngredient of recipeIngredients; let i = index">
    <div class="card-text" *ngIf="recipe.recipeId === recipeIngredient.recipeId">
      <p>
        {{ this.ingredient[i].name }}
    </p>
    </div>
  </div>
  <!-- Display Steps -->
  <div *ngFor="let step of steps">
    <p class="card-text" *ngIf="recipe.recipeId === step.recipeId">
      {{ step.step }}
    </p>
  </div>
</div>


<div>
  <label>Recipe name:
    <input #recipeName />
  </label>
  <!-- (click) passes input value to add() and then clears the input -->
  <button (click)="addRecipes(recipeName.value); recipeName.value=''">
    add
  </button>
</div>
<div>
  <label>Ingredient:
    <input #ingredientName />
  </label>
  <!-- (click) passes input value to add() and then clears the input -->
  <button (click)="addIngredient(ingredientName.value); ingredientName.value=''">
    add
  </button>
</div>
<div>
  <label>Step:
    <input #step />
  </label>
  <!-- (click) passes input value to add() and then clears the input -->
  <button (click)="addIngredient(step.value); step.value=''">
    add
  </button>
</div>


/* ************* Split Screen ******************* */
/* Split the screen in half */
.split {
  height: 100%;
  width: 50%;
  position: fixed;
  z-index: 1;
  top: 0;
  overflow-x: hidden;
  padding-top: 20px;
}

/* Control the left side */
.left {
  left: 0;
  background-color: rgb(255, 224, 188);
  background-image: linear-gradient(to right,rgba(0,0,0,0),rgba(0,0,0,0), rgba(0,0,0,0), rgba(0,0,0,0.5));
}

/* Control the right side */
.right {
  right: 0;
  background-color: rgb(255, 224, 188);
  background-image: linear-gradient(to right, rgba(0,0,0,0.5), rgba(0,0,0,0), rgba(0,0,0,0), rgba(0,0,0,0));
}

/* If you want the content centered horizontally and vertically */
.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

/* Style the image inside the centered container, if needed */
.centered img {
  width: 150px;
  border-radius: 50%;
}
